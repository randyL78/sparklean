// =========== Bem Selection =========================
@mixin e($element) {
  &__#{$element} {
    @content;
  }
}

@mixin m($element) {
  &--#{$element} {
    @content;
  }
}


// ============= Media Queries ========================

@mixin mq($break) {
	// $break = media size, accepts small, medium, large, and x-large only. 
	// any other value will throw an error
	@if $break == "small" {
    @media (min-width: $brkpoint-sm) {
      @content;
    }
	} @else if $break == "medium" {
		@media (min-width: $brkpoint-md + 1) {
		 	@content;
		}
	} @else if $break == "large" {
		@media (min-width: $brkpoint-lg) {
			@content;
    }  
  } @else if $break == "x-large" {
		@media (min-width: $brkpoint-x-lg) {
			@content;
    } 
	} @else {
		@error "`#{$break}` is not an acceptable value. Must be small medium large or x-large ";
  }

}

// ============== Flexbox settings ======================

@mixin flexy($direction) {
  @extend %flex--#{$direction};
}

// ============== Helpers =============================
@mixin doublyVert($margin: 0) { 
  & + & {
    margin-top: $margin;
  }

}


// ================ Grids ==================================
@mixin grid-columns {
  @for $i from 1 to $g-count + 1 {
    $context: g-context(100, $g-count, 10) !global;
    $target: (100 * $i) + (10 * ($i - 1));

    // Generate column output with the number of columns at endd of selector
    &--#{$i} {
      width: percentage($target / $context);
    }
  
  }
}